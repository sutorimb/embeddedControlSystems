%% File : calc_lead_vehicle.tlc
%% Created: Wed Nov 30 13:20:15 2016
%%
%% Description: 
%%   Simulink Coder wrapper functions interface generated for 
%%   S-function "calc_lead_vehicle.c".
%%
%%         File generated by S-function Builder Block
%%
%%   For more information on using the Target Language with the 
%%   Simulink Coder, see the Target Language Compiler manual
%%   (under Simulink Coder) in the "Inlining S-Functions"
%%   chapter under the section and subsection:
%%     "Writing Block Target Files to Inline S-Functions",
%%        "Function-Based or Wrappered Code".
%%
%implements  calc_lead_vehicle "C"
%% Function: BlockTypeSetup ===================================================
%%
%% Purpose:
%%      Set up external references for wrapper functions in the 
%%      generated code.
%%
%function BlockTypeSetup(block, system) Output
  %openfile externs
    
  extern void calc_lead_vehicle_Outputs_wrapper(const boolean_T *ACC_Enable,
			const real32_T *s1,
			const real32_T *s2,
			const real32_T *s3,
			const real32_T *s4,
			const real32_T *s5,
			const real32_T *s6,
			const real32_T *s,
			const real32_T *us1,
			const real32_T *us2,
			const real32_T *us3,
			const real32_T *us4,
			const real32_T *us5,
			const real32_T *us6,
			const real32_T *us,
			const real_T *H,
			boolean_T *en_man,
			boolean_T *en_vel,
			boolean_T *en_pos,
			real32_T *lead_s,
			real32_T *lead_us);
  %closefile externs
  %<LibCacheExtern(externs)>
  %%
%endfunction


%% Function: Outputs ==========================================================
%%
%% Purpose:
%%      Code generation rules for mdlOutputs function.
%%
%function Outputs(block, system) Output
  %%
  %assign pu0 = LibBlockInputSignalAddr(0, "", "", 0)
  %assign pu1 = LibBlockInputSignalAddr(1, "", "", 0)
  %assign pu2 = LibBlockInputSignalAddr(2, "", "", 0)
  %assign pu3 = LibBlockInputSignalAddr(3, "", "", 0)
  %assign pu4 = LibBlockInputSignalAddr(4, "", "", 0)
  %assign pu5 = LibBlockInputSignalAddr(5, "", "", 0)
  %assign pu6 = LibBlockInputSignalAddr(6, "", "", 0)
  %assign pu7 = LibBlockInputSignalAddr(7, "", "", 0)
  %assign pu8 = LibBlockInputSignalAddr(8, "", "", 0)
  %assign pu9 = LibBlockInputSignalAddr(9, "", "", 0)
  %assign pu10 = LibBlockInputSignalAddr(10, "", "", 0)
  %assign pu11 = LibBlockInputSignalAddr(11, "", "", 0)
  %assign pu12 = LibBlockInputSignalAddr(12, "", "", 0)
  %assign pu13 = LibBlockInputSignalAddr(13, "", "", 0)
  %assign pu14 = LibBlockInputSignalAddr(14, "", "", 0)
  %assign pu15 = LibBlockInputSignalAddr(15, "", "", 0)
  %assign py0 = LibBlockOutputSignalAddr(0, "", "", 0)
  %assign py1 = LibBlockOutputSignalAddr(1, "", "", 0)
  %assign py2 = LibBlockOutputSignalAddr(2, "", "", 0)
  %assign py3 = LibBlockOutputSignalAddr(3, "", "", 0)
  %assign py4 = LibBlockOutputSignalAddr(4, "", "", 0)
  %assign py_width = LibBlockOutputSignalWidth(0)
  %assign pu_width = LibBlockInputSignalWidth(0)
  calc_lead_vehicle_Outputs_wrapper(%<pu0>, %<pu1>, %<pu2>, %<pu3>, %<pu4>, %<pu5>, %<pu6>, %<pu7>, %<pu8>, %<pu9>, %<pu10>, %<pu11>, %<pu12>, %<pu13>, %<pu14>, %<pu15>, %<py0>, %<py1>, %<py2>, %<py3>, %<py4> );
  %%
%endfunction


%% [EOF] calc_lead_vehicle.tlc





